{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ttaay\\\\Desktop\\\\mentor_me\\\\mentor-me\\\\src\\\\components\\\\meeting.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nfunction Meeting() {\n  _s();\n  const [availableSlots, setAvailableSlots] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [meetingDetails, setMeetingDetails] = useState({\n    name: '',\n    email: ''\n  });\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  useEffect(() => {\n    // Fetch available slots from your API\n    fetch('/api/availability') // Replace with your actual endpoint\n    .then(response => response.json()).then(data => {\n      // Transform data to React Big Calendar format\n      const events = data.map(slot => ({\n        start: new Date(slot.start_time),\n        end: new Date(slot.end_time),\n        title: 'Available',\n        resourceId: 'available' // For styling\n      }));\n      setAvailableSlots(events);\n    });\n  }, []);\n  const handleSelectSlot = slotInfo => {\n    setSelectedSlot(slotInfo);\n    console.log('Selected Slot:', slotInfo);\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeetingDetails({\n      ...meetingDetails,\n      [name]: value\n    });\n  };\n  const handleScheduleMeeting = () => {\n    if (selectedSlot) {\n      // Send request to your API to schedule the meeting\n      fetch('/api/schedule', {\n        // Replace\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...meetingDetails,\n          start: selectedSlot.start,\n          end: selectedSlot.end\n        })\n      }).then(response => response.json()).then(data => {\n        console.log('Meeting Scheduled:', data);\n        setShowConfirmation(true);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: availableSlots,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      selectable: true,\n      onSelectSlot: handleSelectSlot,\n      eventPropGetter: event => ({\n        style: {\n          backgroundColor: event.resourceId === 'available' ? '#d4edda' : '#f8d7da',\n          color: event.resourceId === 'available' ? '#155724' : '#721c24'\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), selectedSlot && !showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Schedule a Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Time: \", moment(selectedSlot.start).format('LLL'), \" -\", ' ', moment(selectedSlot.end).format('LT')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Your Name\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Your Email\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleScheduleMeeting,\n        children: \"Confirm Booking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your meeting has been scheduled! You will receive an email confirmation.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Meeting, \"kdL9QK1GM8yEu8+Kg5GhPChBWFk=\");\n_c = Meeting;\nexport default Meeting;\nvar _c;\n$RefreshReg$(_c, \"Meeting\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","momentLocalizer","moment","jsxDEV","_jsxDEV","localizer","Meeting","_s","availableSlots","setAvailableSlots","selectedSlot","setSelectedSlot","meetingDetails","setMeetingDetails","name","email","showConfirmation","setShowConfirmation","fetch","then","response","json","data","events","map","slot","start","Date","start_time","end","end_time","title","resourceId","handleSelectSlot","slotInfo","console","log","handleInputChange","event","value","target","handleScheduleMeeting","method","headers","body","JSON","stringify","style","height","children","startAccessor","endAccessor","selectable","onSelectSlot","eventPropGetter","backgroundColor","color","fileName","_jsxFileName","lineNumber","columnNumber","format","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ttaay/Desktop/mentor_me/mentor-me/src/components/meeting.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nfunction Meeting() {\r\n  const [availableSlots, setAvailableSlots] = useState([]);\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const [meetingDetails, setMeetingDetails] = useState({ name: '', email: '' });\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch available slots from your API\r\n    fetch('/api/availability') // Replace with your actual endpoint\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // Transform data to React Big Calendar format\r\n        const events = data.map(slot => ({\r\n          start: new Date(slot.start_time),\r\n          end: new Date(slot.end_time),\r\n          title: 'Available',\r\n          resourceId: 'available', // For styling\r\n        }));\r\n        setAvailableSlots(events);\r\n      });\r\n  }, []);\r\n\r\n  const handleSelectSlot = (slotInfo) => {\r\n    setSelectedSlot(slotInfo);\r\n    console.log('Selected Slot:', slotInfo);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setMeetingDetails({ ...meetingDetails, [name]: value });\r\n  };\r\n\r\n  const handleScheduleMeeting = () => {\r\n    if (selectedSlot) {\r\n      // Send request to your API to schedule the meeting\r\n      fetch('/api/schedule', { // Replace\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...meetingDetails,\r\n          start: selectedSlot.start,\r\n          end: selectedSlot.end,\r\n        }),\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log('Meeting Scheduled:', data);\r\n          setShowConfirmation(true);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: 500 }}>\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={availableSlots}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        selectable\r\n        onSelectSlot={handleSelectSlot}\r\n        eventPropGetter={(event) => ({\r\n          style: {\r\n            backgroundColor: event.resourceId === 'available' ? '#d4edda' : '#f8d7da',\r\n            color: event.resourceId === 'available' ? '#155724' : '#721c24',\r\n          },\r\n        })}\r\n      />\r\n\r\n      {selectedSlot && !showConfirmation && (\r\n        <div>\r\n          <h3>Schedule a Meeting</h3>\r\n          <p>\r\n            Selected Time: {moment(selectedSlot.start).format('LLL')} -{' '}\r\n            {moment(selectedSlot.end).format('LT')}\r\n          </p>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Your Name\"\r\n            onChange={handleInputChange}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Your Email\"\r\n            onChange={handleInputChange}\r\n          />\r\n          <button onClick={handleScheduleMeeting}>Confirm Booking</button>\r\n        </div>\r\n      )}\r\n\r\n      {showConfirmation && (\r\n        <p>Your meeting has been scheduled! You will receive an email confirmation.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Meeting;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}